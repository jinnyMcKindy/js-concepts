import React from 'react'
import ReactDOM from 'react-dom'
import styled, { injectGlobal } from 'styled-components'

import { Presentation, Slide } from '../src'
import { H1, H2, H3, H4, Code } from '../src/blocks'
import VideoBackground from '../src/blocks/video-background'

import { Presa } from '../src/assets/icons'
import SidebarLayout from './sidebar-layout'
import GithubButton from './github-button'

const baseTextColor = '#444'
const primaryColor = '#3c59ff'

const PitchDeck = () => (
  <Presentation name="Presa pitch deck" theme={{ textColor: baseTextColor }}>
    <Slide
      name="FP –Ω–∞ JavaScript"
      layout={children => (
        <SidebarLayout
          src={require('./images/lambda.jpg')}
          proportion="6/9"
          children={children}
        />
      )}
    >
      <PresaTitle>–ü—Ä–∏–Ω—Ü–∏–ø—ã –§–ü –≤ JavaScript</PresaTitle>
      <PresaSlogan>
        –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ –ø–∞—Ä–∞–¥–∏–≥–º–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Å—Ç–∏–ª—å
        –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, –∫–æ—Ç–æ—Ä—ã–π
        –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∏–∑–±–µ–≥–∞–µ—Ç
        –º—É—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–µ–π—Ç–∞ üíÖ
      </PresaSlogan>
      <Footnote>
        ‚Äî<br />
        –ù–∞–∂–º–∏—Ç–µ ‚û°Ô∏è –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Å–ª–∞–π–¥–∞
      </Footnote>
    </Slide>
    <Slide name="–§–∏—á–∏ –§–ü" centered>
      <H1>–§–∏—á–∏ –§–ü</H1>
      <div>
        <img width="500px" height="auto" src={require('./images/char.png')} />
      </div>
    </Slide>
    <Slide name="–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏" fade={0.2} centered>
      <Numbered number={1}>
        <H1>–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</H1>
        <H3>–ü—Ä–∏–∑–Ω–∞–∫–∏ —á–∏—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: </H3>
        <ul>
          <li>
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ
            –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å)
          </li>
          <li>–ù–µ –ø–æ—Ä–æ–∂–¥–∞–µ—Ç side-effects</li>
        </ul>
      </Numbered>
    </Slide>
    <Slide name="–ü—Ä–∏–º–µ—Ä—ã pure functions" fade={0.2}>
      <H1>–ü—Ä–∏–º–µ—Ä—ã</H1>
      <Code>
        {` 
function pure(a){
  return a+2; //pure function
}
let f = 0;
function notPure(a){
  f++; //has side effects
  return a; 
}
function notPure(a){
  return Math.random(); //returns different result
}
`}
      </Code>
    </Slide>
    <Slide name="Returns the same result" fade={0.2}>
      <H1>The same result</H1>
      <Description>
        –§—É–Ω–∫—Ü–∏—è –Ω–µ —á–∏—Å—Ç–∞—è, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –í–µ—Ä–Ω–µ—Ç –¥—Ä—É–≥–æ–π
        —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö, –µ—Å–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
        –∏–∑–º–µ–Ω–∏—Ç—Å—è
      </Description>
      <Code>
        {` 
  let PI = 3.14;
  const calculateArea = (radius) => radius * radius * PI;
  calculateArea(10); // returns 314.0
  `}
      </Code>
    </Slide>
    <Slide name="Let's fix it!" fade={0.2}>
      <H1>Let's fix it!</H1>
      <Description>
        –ü–µ—Ä–µ–¥–∞–µ–º PI –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞. –¢–µ–ø–µ—Ä—å —É —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç —Å–∞–π–¥ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤, –∞
        —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–¥–∞ –æ–¥–∏–Ω–∞–∫–æ–≤ –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
      </Description>
      <Code>
        {` 
let PI = 3.14;
const calculateArea = (radius, pi) => radius * radius * pi;
calculateArea(10, PI); // returns 314.0
  `}
      </Code>
      <p>
        <b>–í—ã–≤–æ–¥</b>: –º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–æ—â—Ä—è–µ—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º
        –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏
      </p>
    </Slide>
    <Slide name="–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —á–∏—Å—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π">
      <H1>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —á–∏—Å—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</H1>
      <PresaSlogan>
        –ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã
      </PresaSlogan>
      <Description>
        –ö–æ–¥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º. –ù–µ –Ω–∞–¥–æ –º–æ–∫–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏. –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
        —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
      </Description>
      <ul>
        <li>Given a parameter A ‚Üí expect the function to return value B</li>
        <li>Given a parameter C ‚Üí expect the function to return value D</li>
      </ul>
      <Image width="350" src={require('./images/char.png')} />
    </Slide>
    <Slide name="–ü—Ä–∏–º–µ—Ä —á–∏—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏">
      <p>
        –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–ª–µ–∫—Ü–∏—é —á–∏—Å–µ–ª –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç
        –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
      </p>
      <Code>
        {` 
let list = [1, 2, 3, 4, 5];
const incrementNumbers = (list) => list.map(number => number + 1);
incrementNumbers(list); // [2, 3, 4, 5, 6]`}
      </Code>
      <img width="600px" src={require('./images/evolve.png')} />
    </Slide>
    <Slide
      name="–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å"
      layout={children => (
        <SidebarLayout
          src={require('./images/imm.png')}
          proportion="6/9"
          children={children}
        />
      )}
    >
      <H1>–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å</H1>
      <PresaSlogan>
        –ù–µ–∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç—å —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –∏–ª–∏ –Ω–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å—Å—è
      </PresaSlogan>
      <Description>
        –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã, —Ç–æ –∏—Ö —Å—Ç–µ–π—Ç –Ω–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –ø–æ—Å–ª–µ
        —Å–æ–∑–¥–∞–Ω–∏—è. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç - —Ç–æ —ç—Ç–æ
        –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
      </Description>
    </Slide>

    <Slide name="–¶–∏–∫–ª—ã">
      <H1>–ò–º–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–∏–∫–ª—ã</H1>–í JS —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ü–∏–∫–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—É—Ç–∏—Ä—É—é—Ç
      –¥–∞–Ω–Ω—ã–µ
      <Code>{`
var values = [1, 2, 3, 4, 5];
var sumOfValues = 0;

for (var i = 0; i < values.length; i++) {
  sumOfValues += values[i];
}

sumOfValues // 15
`}</Code>
      <p>–í –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `sumOfValues`</p>
    </Slide>
    <Slide name="–î–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–∏–∫–ª—ã">
      <PresaSlogan>–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é?</PresaSlogan>
      <p>
        {' '}
        –° —Ä–µ–∫—É—Ä—Å–∏–µ–π –ø–µ—Ä–º–µ–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã. `list` and `the
        accumulator` –Ω–µ –º–µ–Ω—è—é—Ç—Å—è.
      </p>
      <Code>{`let list = [1, 2, 3, 4, 5];
let accumulator = 0;
function sum(list, accumulator) {
  if (list.length == 0) {
    return accumulator;
  }
  return sum(list.slice(1), accumulator + list[0]);
}
sum(list, accumulator); // 15
list; // [1, 2, 3, 4, 5]
accumulator; // 0
`}</Code>
    </Slide>
    <Slide name="–ö–æ–º–ø–æ–∑–∏—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π">
      <H1>–ö–æ–º–ø–æ–∑–∏—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π</H1>
      <Description>
        –ö–æ–º–ø–æ–∑–∏—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏ <i>function chaining</i> –æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
        –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–∞–∫ –∏–Ω–ø—É—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
        –Ω–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—è <i>original input</i>
      </Description>
      <Code>{`let string = " I will be a url slug   ";
function slugify(string) {
  return string.toLowerCase()
    .trim()
    .split(" ")
    .join("-");
}
slugify(string); // i-will-be-a-url-slug
`}</Code>
    </Slide>
    <Slide name="–§—É–∫–Ω—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞">
      <PresaSlogan>–§—É–∫–Ω—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞</PresaSlogan>
      <PresaSlogan>Functions as first-class entities</PresaSlogan>
      <Description>
        <p>
          –ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å + —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å (–∑–∞–ø–æ–º–∏–Ω–∞—Ç—å)
          —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
        </p>
        <p>
          –ò–¥–µ—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π, –∫–∞–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞, –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤
          –ø–µ—Ä–µ–¥–∞—á–∏ –∏—Ö, –∫–∞–∫ –∑–Ω–µ—á–µ–Ω–∏–π, –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∞–Ω–Ω—ã—Ö
        </p>
      </Description>
      –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–π, –∫–∞–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞:
      <ul>
        <li>–ö –Ω–∏–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∫ –∫ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º</li>
        <li>–ú–æ–≥—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è, –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π</li>
        <li>–ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º</li>
      </ul>
      <Image width="300" src={require('./images/first.jpeg')} />
    </Slide>
    <Slide name="–§—É–∫–Ω—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞" class="–§—É–∫–Ω—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞">
      <PresaSlogan>–§—É–∫–Ω—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞</PresaSlogan>
      <p>
        –§—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±—ä–µ–∫—Ç–æ–≤
        –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞.
      </p>
      <p>–§—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –º–æ–∂–µ—Ç: </p>
      <ul>
        <li>–ü—Ä–∏–Ω–∏–º–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤</li>
        <li>–í–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
      </ul>
      <Code>{`
    let func = () => 2;
    function highOrder(func){
      return function(){
        return func()+2;
      }
    }
    highOrder(func)()
    `}</Code>
    </Slide>
    <Slide name="Filter">
      <H1>Imperative filter</H1>
      <PresaSlogan>
        –ò–º–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
      </PresaSlogan>
      <Code>{`var numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var evenNumbers = [];
for (var i = 0; i < numbers.length; i++) {
  if (numbers[i] % 2 == 0) {
    evenNumbers.push(numbers[i]);
  }
}
console.log(evenNumbers); // (6) [0, 2, 4, 6, 8, 10]
`}</Code>
    </Slide>
    <Slide name="Declarative filter">
      <PresaSlogan>
        –î–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ `filter` —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ
        –ø–æ—Ä—è–¥–∫–∞
      </PresaSlogan>
      <Code>{`
const even = n => n % 2 == 0;
const listOfNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
listOfNumbers.filter(even); // [0, 2, 4, 6, 8, 10]
function smaller(number) {
  return number < this;
}
function filterArray(x, listOfNumbers) {
  return listOfNumbers.filter(smaller, x);
}
let numbers = [10, 9, 8, 2, 7, 5, 1, 3, 0];
filterArray(3, numbers); // [2, 1, 0]
`}</Code>
    </Slide>
    <Slide name="map">
      <H1>Map</H1>
      <PresaSlogan>
        Map - –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∫–æ–ª–±–µ–∫ –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é
        –∫–æ–ª–ª–µ–∫—Ü–∏—é
      </PresaSlogan>
      <p>–î–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ</p>
      <Code>{`
const people = [{name: "Ivan", age: 25},
               {name: "Oleg", age: 50}]
const makeSentence = (person) => \`$\{person.name\} 
is $\{person.age\} years old\`;
const peopleSentences = (people) => people.map(makeSentence);
peopleSentences(people); //Ivan is 25 years old
`}</Code>
    </Slide>
    <Slide name="Reduce">
      <H1>Reduce</H1>
      <PresaSlogan>
        Reduce - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é –∏–∑ —Å–∫–æ–º–±–∏–Ω–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
      </PresaSlogan>
      <Code>{`let shoppingCart = [
  { productTitle: "Product 1", amount: 10 },
  { productTitle: "Product 2", amount: 30 },
  { productTitle: "Product 3", amount: 20 },
  { productTitle: "Product 4", amount: 60 }
];
const sumAmount = (currentTotalAmount, order) => currentTotalAmount 
+ order.amount;
const getTotalAmount = (shoppingCart) => 
shoppingCart.reduce(sumAmount, 0);
getTotalAmount(shoppingCart); // 120
  `}</Code>
    </Slide>
    <Slide
      name="The end"
      layout={children => (
        <SidebarLayout
          src={require('./images/func.jpeg')}
          proportion="9/9"
          children={children}
        />
      )}
      centered
    >
      <H1>Thanks!</H1>

      <Footnote>
        Powered by <a href="https://github.com/molefrog/presa">Presa</a>
      </Footnote>
    </Slide>
  </Presentation>
)
const NumberedNumber = styled.div`
  width: 50px;
  height: 50px;
  border-radius: 6px;
  font-size: 26px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 10px 0;

  color: ${props => props.color};
  border: 3px solid ${props => props.color};
  text-shadow: none;
`

const NumberedCont = styled.div`
  display: flex;
  flex-flow: column;
  align-items: ${props => (props.centered ? 'center' : 'flex-start')};
  text-align: ${props => (props.centered ? 'center' : 'left')};

  padding-bottom: 100px;

  ${props =>
    props.inverse &&
    `
    color: white;
    text-shadow: 1px 2px rgba(0,0,0,0.6);`};
`

const Numbered = props => (
  <NumberedCont centered={props.centered} inverse={props.inverse}>
    <NumberedNumber color={props.inverse ? 'white' : primaryColor}>
      {props.number}
    </NumberedNumber>
    {props.children}
  </NumberedCont>
)

const Footnote = styled.div`
  color: #999;
  font-size: 18px;
`

const PresaTitle = styled(H1)`
  color: ${primaryColor};
`

const PresaSlogan = styled(H3)`
  color: #444;
  margin-bottom: 40px;
`
const Image = styled.img`
  max-width: ${props => props.width}px;
  float: right;
  margin-top: -150;
  margin-right: -100px;
`
const StarOnGithub = styled.div`
  margin-top: 20px;
  margin-bottom: 90px;
`

const Description = styled.p`
  margin: 40px 0;
  text-align: left;
  line-height: 1.5;
`

const InlineCode = styled.code`
  letter-spacing: -0.5px;
  background: rgba(60, 89, 255, 0.07);
  color: ${primaryColor};
  padding: 3px 8px;
  border-radius: 3px;
`

const PresaIcon = styled(Presa)`
  display: inline-block;
  margin-right: 14px;
  width: 40px;
  height: 40px;
`

// to prevent additional scrollbars
injectGlobal`
  body {
    margin: 0;
    padding: 0;
  }
`

const rerenderApp = () => {
  const container = document.getElementById('container')

  // clean up and render
  ReactDOM.unmountComponentAtNode(container)
  ReactDOM.render(<PitchDeck />, container)
}

if (module.hot) {
  module.hot.accept(rerenderApp)
}

document.addEventListener('DOMContentLoaded', () => {
  rerenderApp()
})
